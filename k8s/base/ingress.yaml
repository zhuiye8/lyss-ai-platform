# Ingress 配置 - Lyss AI Platform
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lyss-platform-ingress
  namespace: lyss-ai-platform
  labels:
    app.kubernetes.io/name: lyss-platform-ingress
    app.kubernetes.io/part-of: lyss-ai-platform
  annotations:
    # NGINX Ingress 配置
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/use-regex: "true"
    
    # SSL 配置
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # 安全头配置
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 速率限制
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # 请求大小限制
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # 超时配置
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    
    # WebSocket 支持
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "api-gateway-service"

spec:
  tls:
  - hosts:
    - api.lyss.ai
    - app.lyss.ai
    secretName: lyss-platform-tls
  
  rules:
  # API 路由
  - host: api.lyss.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8000
  
  # 前端应用路由
  - host: app.lyss.ai
    http:
      paths:
      # API 代理
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8000
      
      # WebSocket 代理
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8000
      
      # 前端静态文件
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80

---
# ClusterIssuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app.kubernetes.io/name: letsencrypt-prod
    app.kubernetes.io/part-of: lyss-ai-platform
spec:
  acme:
    # Let's Encrypt 生产环境 URL
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@lyss.ai
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
# 开发环境 Ingress（用于本地测试）
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lyss-platform-ingress-dev
  namespace: lyss-ai-platform
  labels:
    app.kubernetes.io/name: lyss-platform-ingress-dev
    app.kubernetes.io/part-of: lyss-ai-platform
    app.kubernetes.io/environment: development
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  # 开发环境路由（不使用 HTTPS）
  - host: lyss.local
    http:
      paths:
      # API 路由
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8000
      
      # WebSocket 路由
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8000
      
      # 前端路由
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80