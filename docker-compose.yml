# Lyss AI Platform 基础设施服务配置
# 用于本地开发环境的数据库、缓存和向量存储服务

version: '3.8'

services:
  # PostgreSQL 主数据库
  postgres:
    image: postgres:15-alpine
    container_name: lyss-postgres
    environment:
      POSTGRES_DB: lyss_platform
      POSTGRES_USER: lyss_user
      POSTGRES_PASSWORD: lyss_dev_password_2025
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "log_destination=stderr"
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=256MB"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lyss_user -d lyss_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - lyss-network

  # Redis 缓存和会话存储
  redis:
    image: redis:7-alpine
    container_name: lyss-redis
    environment:
      REDIS_PASSWORD: lyss_redis_password_2025
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./infrastructure/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass lyss_redis_password_2025
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - lyss-network

  # Qdrant 向量数据库 (用于 Memory Service)
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: lyss-qdrant
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - lyss-network

  # MinIO 对象存储 (可选，用于文件上传等功能)
  minio:
    image: minio/minio:latest
    container_name: lyss-minio
    environment:
      MINIO_ROOT_USER: lyss_minio_admin
      MINIO_ROOT_PASSWORD: lyss_minio_password_2025
    ports:
      - "9000:9000"   # API端口
      - "9001:9001"   # Console端口
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - lyss-network

# 数据卷定义
volumes:
  postgres_data:
    driver: local
    name: lyss_postgres_data
  redis_data:
    driver: local  
    name: lyss_redis_data
  qdrant_data:
    driver: local
    name: lyss_qdrant_data
  minio_data:
    driver: local
    name: lyss_minio_data

# 网络定义
networks:
  lyss-network:
    driver: bridge
    name: lyss-network